<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jia.mapper.EducationMapper" >
  <resultMap id="BaseResultMap" type="cn.jia.domain.Education" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="school" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="from_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, school, level, from_time, to_time, create_time, update_time
  </sql>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from education
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from education
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.jia.domain.Education" >
    insert into education (id, user_id, school, 
      level, from_time, to_time, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, 
      #{level,jdbcType=VARCHAR}, #{fromTime,jdbcType=VARCHAR}, #{toTime,jdbcType=VARCHAR}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="cn.jia.domain.Education" >
    insert into education
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="fromTime != null" >
        from_time,
      </if>
      <if test="toTime != null" >
        to_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="fromTime != null" >
        #{fromTime,jdbcType=VARCHAR},
      </if>
      <if test="toTime != null" >
        #{toTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByUserIdSelective" parameterType="cn.jia.domain.Education" >
    update education
    <set >
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="fromTime != null" >
        from_time = #{fromTime,jdbcType=VARCHAR},
      </if>
      <if test="toTime != null" >
        to_time = #{toTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jia.domain.Education" >
    update education
    set user_id = #{userId,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      from_time = #{fromTime,jdbcType=VARCHAR},
      to_time = #{toTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>